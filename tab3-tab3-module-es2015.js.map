{"version":3,"sources":["./src/app/tab3/tab3.page.html","./src/app/Services/userAuth/user-auth.service.ts","./src/app/tab3/tab3.module.ts","./src/app/tab3/tab3.page.scss","./src/app/tab3/tab3.page.ts"],"names":[],"mappings":"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","file":"tab3-tab3-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>   \\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"center\\\">\\n            <ion-chip (click)=\\\"this.appSetting.back()\\\" outline color=\\\"primary\\\">\\n              <ion-icon  name=\\\"backspace\\\"></ion-icon>\\n              <ion-label>Back</ion-label>\\n            </ion-chip>\\n          </div>\\n        </ion-col>\\n        \\n        <ion-col className=\\\"ion-align-self-center\\\">\\n          <div class=\\\"center\\\">\\n           \\n          </div>\\n        </ion-col>\\n        <ion-col className=\\\"ion-align-self-center\\\">\\n          <div class=\\\"center\\\">\\n           \\n         </div>\\n        </ion-col>\\n        <ion-col >\\n          <div   class=\\\"center\\\">\\n            <ion-chip *ngIf=\\\"this.appSetting.sessionUser.userID!==0\\\"  (click)=\\\"logout()\\\" outline color=\\\"primary\\\">\\n              <ion-icon name=\\\"log-out-outline\\\"></ion-icon>\\n              <ion-label>Logout</ion-label>\\n            </ion-chip>\\n          </div>\\n         \\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.orderTracking===0\\\" [fullscreen]=\\\"true\\\">\\n\\n\\n        <!---For Sign In -->\\n        <ion-card *ngIf=\\\"this.appSetting.signIn===1\\\" >\\n           <ion-card-header>\\n            <ion-card-title>Sign In</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Phone/Username <ion-text *ngIf=\\\"this.username===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input [(ngModel)]=\\\"this.username\\\" required type=\\\"text\\\" oninput=\\\"\\\"></ion-input>\\n              </ion-item>\\n    \\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Password <ion-text *ngIf=\\\"this.password===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input [(ngModel)]=\\\"this.password\\\" required type=\\\"password\\\" oninput=\\\"\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button  color=\\\"light\\\" expand=\\\"block\\\">\\n                  Cancel\\n                </ion-button>\\n                </ion-col>\\n              \\n              <ion-col>\\n                <ion-button  (click)=\\\"this.login()\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                  Sign In\\n              </ion-button>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col>\\n                <div class=\\\"center\\\">\\n                  <a (click)=\\\"this.appSetting.signIn=0;this.appSetting.signUp=1;\\\">Don't have an account?</a></div>\\n              \\n            </ion-col>\\n          <!-----  <ion-col>\\n             <div class=\\\"center\\\"><a>Forget password?</a></div>\\n            </ion-col>------>\\n          </ion-row>\\n        </ion-grid>\\n      \\n        </ion-card>\\n\\n        <!---For Two Factor Authenication -->\\n    <!-----    \\n      <ion-card *ngIf=\\\"this.appSetting.otp===1\\\">\\n          <ion-card-header>\\n           <ion-card-title>One Time Password</ion-card-title>\\n           <ion-card-subtitle>Please prove us with OTP that you are not spam!</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n         \\n\\n            <ion-item>\\n              <ion-label>Phone</ion-label>\\n              <ion-toggle ></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Google Authenicator</ion-label>\\n              <ion-toggle disabled></ion-toggle>\\n            </ion-item>\\n\\n            <ion-item>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-input required type=\\\"number\\\" placeholder=\\\"OTP\\\"oninput=\\\"\\\"></ion-input>\\n                </ion-col>\\n                <ion-col>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-item>\\n           \\n           \\n           </ion-list>\\n\\n         </ion-card-content>\\n\\n         <ion-grid>\\n           <ion-row>\\n             <ion-col>\\n               <ion-button (click)=\\\"this.appSetting.otp=0\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                 Cancel\\n               </ion-button>\\n               </ion-col>\\n             \\n             <ion-col>\\n               <ion-button (click)=\\\"this.appSetting.loginStatus=1;this.appSetting.otp=0\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                 Submit\\n             </ion-button>\\n             </ion-col>\\n           </ion-row>\\n       </ion-grid>\\n     \\n       </ion-card>        \\n------->\\n    \\n        <!---For Sign Up Authenication -->\\n        <ion-card *ngIf=\\\" this.appSetting.signUp===1\\\">\\n         \\n          <ion-card-header>\\n           <ion-card-title>Sign Up</ion-card-title>\\n           <ion-card-subtitle>Please enter your informations</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Name <ion-text *ngIf=\\\"data.userName.toString()===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"data.userName\\\" ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Password <ion-text  *ngIf=\\\"data.password.toString()!==this.confirmPassword || data.password.toString()===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" ></ion-input>\\n            </ion-item>\\n  \\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Confirm Password <ion-text *ngIf=\\\"data.password.toString()!==this.confirmPassword || this.confirmPassword===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"this.confirmPassword\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Phone Number <ion-text *ngIf=\\\"handlePhoneValue()\\\"  color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"tel\\\" [(ngModel)]=\\\"data.userPhone\\\" ></ion-input>\\n            </ion-item>\\n\\n           \\n           \\n\\n          \\n           \\n           </ion-list>\\n\\n         </ion-card-content>\\n\\n         <ion-grid>\\n           <ion-row>\\n             <ion-col>\\n               <ion-button  color=\\\"light\\\" expand=\\\"block\\\">\\n                 Cancel\\n               </ion-button>\\n               </ion-col>\\n             \\n             <ion-col>\\n               <ion-button (click)=\\\"onPost()\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                 Sign Up\\n             </ion-button>\\n             </ion-col>\\n           </ion-row>\\n           <ion-row>\\n            <ion-col>\\n              <div class=\\\"center\\\">\\n                <a (click)=\\\"this.appSetting.signIn=1;this.appSetting.signUp=0;\\\">Already a member?</a></div>\\n            \\n          </ion-col>\\n       \\n        </ion-row>\\n          </ion-grid>\\n     \\n       </ion-card>   \\n\\n        <!---For Profile -->\\n        <ion-card *ngIf=\\\" this.appSetting.sessionUser.userID!==0\\\">\\n         \\n          <ion-card-header>\\n           <ion-card-title>User Profile</ion-card-title>\\n           <ion-card-subtitle>This is your delivery information</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\n              <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"this.appSetting.sessionUser.userName\\\" readonly></ion-input>\\n            </ion-item>\\n<!----------\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Password <ion-text  *ngIf=\\\"data.password.toString()!==this.confirmPassword || data.password.toString()===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" ></ion-input>\\n            </ion-item>\\n  \\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Confirm Password <ion-text *ngIf=\\\"data.password.toString()!==this.confirmPassword || this.confirmPassword===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"this.confirmPassword\\\"></ion-input>\\n            </ion-item>\\n--------->\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Phone Number </ion-label>\\n              <ion-input required type=\\\"tel\\\" [(ngModel)]=\\\"this.appSetting.sessionUser.userPhone\\\" readonly></ion-input>\\n            </ion-item>\\n\\n        \\n           \\n           </ion-list>\\n\\n         </ion-card-content>\\n\\n         <ion-grid>\\n           <ion-row>\\n            <ion-col>\\n              <div class=\\\"center\\\">\\n            <!-----    <a (click)=\\\"this.appSetting.signIn=1;this.appSetting.signUp=0;\\\">Want to Edit User Profile?</a>\\n             ------> \\n            </div>\\n           \\n          </ion-col>\\n       \\n        </ion-row>\\n       </ion-grid>\\n     \\n       </ion-card>  \\n      \\n\\n        <!---For order Tracking -->\\n        <ion-card *ngIf=\\\" this.appSetting.sessionUser.userID!==0 && this.appSetting.sessionUser.userType!==2 \\\">\\n          <ion-card-header>\\n           <ion-card-title>Order Tracking</ion-card-title>\\n           <ion-card-subtitle *ngIf=\\\"this.appSetting.userOrderTrackingList.length!==0\\\">You can check your order list here</ion-card-subtitle>\\n           <ion-card-subtitle *ngIf=\\\"this.appSetting.userOrderTrackingList.length===0\\\">You have no order</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n              <ion-item button *ngFor=\\\"let item of this.appSetting.userOrderTrackingList\\\" (click)=\\\"orderTrackingDetialPage(item.orderID)\\\">\\n                <ion-label>\\n                  Invoice :{{item.orderID}}\\n                </ion-label>\\n              </ion-item>  \\n              <ion-item button (click)=\\\"this.orderListRefresh()\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"refresh-circle-outline\\\"></ion-icon>\\n                \\n                <ion-label>\\n                  Refresh\\n                </ion-label>\\n              </ion-item>  \\n           </ion-list>\\n          </ion-card-content>\\n        </ion-card> \\n        <!----location share-->\\n        <ion-card>  \\n          <ion-grid *ngIf=\\\" this.appSetting.sessionUser.userID!==0 && this.appSetting.sessionUser.userType!==2\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-button   (click)=\\\"locationShare()\\\"  color=\\\"primary\\\" expand=\\\"block\\\">\\n                     Location Share\\n                  </ion-button>      \\n                </ion-col>\\n              </ion-row>\\n          </ion-grid>\\n        </ion-card>  \\n\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.appSetting.userOrderTrackingListTemp.length!==0  && this.orderTracking===1\\\"\\n [fullscreen]=\\\"true\\\">\\n  <ion-row>\\n    <ion-col>\\n      <ion-button expand=\\\"full\\\">Invoice No:{{this.invoice}}</ion-button>\\n    </ion-col>\\n    \\n  </ion-row>\\n  <ion-card *ngFor=\\\"let item of this.appSetting.userOrderTrackingListTemp; let i=index;\\\">\\n    <img src=\\\"{{this.appSetting.http}}://{{this.localhost}}/images/Sub-{{item.sub_item_id}}-{{item.sub_item_image}}\\\" />\\n   \\n    <ion-card-header>\\n      <ion-card-subtitle>{{item.main_item_name}}</ion-card-subtitle>\\n      <ion-card-title>{{item.sub_item_name}}</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-toolbar>\\n      <ion-grid>\\n        \\n        <ion-row>\\n          <ion-col>\\n            <ion-card >\\n              <ion-card-header>\\n                <ion-card-subtitle>Quantity</ion-card-subtitle>\\n                <ion-card-title>{{item.outputQty}}</ion-card-title>\\n              </ion-card-header>\\n            </ion-card>\\n          </ion-col>\\n     \\n          <ion-col>\\n            <ion-card>\\n              <ion-card-header>\\n                <ion-card-subtitle>Amount</ion-card-subtitle>\\n                <ion-card-title>{{item.output_price}}</ion-card-title>\\n              </ion-card-header>\\n            </ion-card>\\n          </ion-col>\\n         \\n        </ion-row>\\n      </ion-grid>\\n\\n    </ion-toolbar>\\n  \\n  </ion-card>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-subtitle>Total Quantity</ion-card-subtitle>\\n            <ion-card-title>{{this.totalQty}}</ion-card-title>\\n          </ion-card-header>\\n        </ion-card>\\n      </ion-col>\\n\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-subtitle>Total Amount</ion-card-subtitle>\\n            <ion-card-title>{{this.totalAmount}}</ion-card-title>\\n          </ion-card-header>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"this.orderTracking=0\\\">Back</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-content *ngIf=\\\"this.appSetting.sessionUser.userType===2\\\">\\n  <ion-card>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of this.appSetting.errorMsg\\\">\\n    <ion-textarea>\\n        {{item}}\\n    </ion-textarea>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n </ion-content> \\n\\n\\n\\n\"","import { userModel } from './../../model/userModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAuthService {\r\n  private url = `${this.appSetting.http}://${this.appSetting.apiPort}/api/userAuthenication`;\r\n  constructor(private http: HttpClient,private appSetting:appSetting) {}\r\n\r\n\r\n  check(username:String,password:String): Observable<userModel>{\r\n    let url=this.url+`?username=${username}&password=${password}`;\r\n    return this.http.get<userModel>(url);\r\n  }\r\n}\r\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }])\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMy9EOlxcb25saW5lU2hvcEFwcFxcb25saW5lU2hvcEFwcFxcbXlBcHAvc3JjXFxhcHBcXHRhYjNcXHRhYjMucGFnZS5zY3NzIiwic3JjL2FwcC90YWIzL3RhYjMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvdGFiMy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XG59IiwiaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufSJdfQ== */\"","import { LocationSaveService } from './../Services/locationSave/location-save.service';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserOrderTrackingService } from './../Services/userOrderTracking/user-order-tracking.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserAuthService } from './../Services/userAuth/user-auth.service';\nimport  Swal  from 'sweetalert2';\nimport { userModel } from './../model/userModel';\nimport { UserService } from './../Services/User/user.service';\nimport { appSetting } from 'src/app/app-setting';\nimport { Component } from '@angular/core';\nimport { locationModel } from '../model/locationModel';\n\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n  data:userModel={\n    userID: 0,\n        password:\"\",\n        userName: \"\",\n        userType: 0,\n        userPhone: \"\",\n        userAddress: \"\"\n  }\n  confirmPassword=\"\";\n  phoneStatus=false;\n  emailStatus=true;\n  typeError=false;\n  constructor( private locationService:LocationSaveService,\n    private geolocation: Geolocation,\n   private service:UserService,private orderTrackingService:UserOrderTrackingService,public appSetting:appSetting,private userAuthService:UserAuthService) {}\n  handlePhoneValue(){\n   \n    if(this.data.userPhone===''){\n      this.phoneStatus= false;\n      return true;\n    }\n    else if(this.data.userPhone.length<8){\n      this.phoneStatus= false;\n      return true;\n    }\n    else\n    {\n      this.phoneStatus= true;\n      return false;\n    }\n  }\n  \n  validation(){\n    if(this.data.password!==this.confirmPassword || this.confirmPassword==='')\n    this.typeError=true;\n    else if(this.phoneStatus===false)\n    this.typeError=true;\n    else if(this.emailStatus===false)\n    this.typeError=true;\n    else if(this.data.userName==='')\n    this.typeError=true;\n    else\n    this.typeError=false;\n  }\n  \n  userProfile:userModel=this.appSetting.sessionUser;\n  onPost(){\n    this.validation();\n    if(this.typeError===false){\n      let x:userModel=this.data;\n      this.service.post(x);\n     \n     \n    }\n    }\n\n\n    dataCheckLogin(username:String,password:String){\n      this.userAuthService.check(username,password).subscribe(\n       x=>{\n        \n         this.appSetting.sessionUser=x},\n       err=>{\n         let error:HttpErrorResponse=Object.assign(err);\n         let msg=\"error\";\n         let action=\"\";\n         let btn=\"OK\";\n         if(error.status===401){\n           msg=\"Invalid username & password!\";\n           action=\"<a href>Forget password?</a>\";\n         }\n         if(error.status===404){\n           msg=\"Account does not exist\";\n           action=\"<span>Please Sign Up to continue.Thank you</span>\"\n         }\n    \n          Swal.hideLoading();\n         Swal.fire({\n           icon: 'error',\n           title: 'Oops...',\n           text: msg,\n           confirmButtonText:btn,\n           footer: action\n         });\n       },\n       ()=>{\n       \n         this.userProfile=this.appSetting.sessionUser;\n         if(this.appSetting.sessionUser.userType===2){\n          this.orderTrackingService.getAll().subscribe(x=>\n            this.appSetting.userOrderTrackingList=x,err=>(console.log(err)),()=>{\n              this.appSetting.signIn=0;\n              this.geolocation.getCurrentPosition().then((resp) => {\n                let locationModel:locationModel={\n                  id:0,\n                  userID:this.appSetting.sessionUser.userID,\n                  location_ltd:resp.coords.latitude.toString(),\n                  location_lng:resp.coords.longitude.toString()\n                }\n                this.locationService.post(locationModel);\n                 Swal.fire('Welcome',\"Login Successful\",'success');\n               Swal.hideLoading();\n              }\n              )\n            });\n         }else{\n         this.orderTrackingService.get(this.appSetting.sessionUser.userID).subscribe(x=>\n          this.appSetting.userOrderTrackingList=x,err=>(console.log(err)),()=>{\n            this.appSetting.signIn=0;\n            this.geolocation.getCurrentPosition().then((resp) => {\n              let locationModel:locationModel={\n                id:0,\n                userID:this.appSetting.sessionUser.userID,\n                location_ltd:resp.coords.latitude.toString(),\n                location_lng:resp.coords.longitude.toString()\n              }\n              this.locationService.post(locationModel);\n               Swal.fire('Welcome',\"Login Successful\",'success');\n             Swal.hideLoading();\n            }\n            )\n          });}\n       }\n     )\n   }\nlocationShare(){\n  this.geolocation.getCurrentPosition().then((resp) => {\n    let locationModel:locationModel={\n      id:0,\n      userID:this.appSetting.sessionUser.userID,\n      location_ltd:resp.coords.latitude.toString(),\n      location_lng:resp.coords.longitude.toString()\n    }\n    this.locationService.post(locationModel);\n    Swal.fire(\"Successfully Share your location\");\n});}\n   orderListRefresh(){\n    Swal.fire({\n      title: 'Please wait',\n      html: 'System is processing for your request',\n      onBeforeOpen: () => {\n        Swal.showLoading()}});\n    this.orderTrackingService.get(this.appSetting.sessionUser.userID).subscribe(\n      x=>this.appSetting.userOrderTrackingList=x,\n      err=>console.log(err),()=>{\n        Swal.hideLoading();\n    })\n   }\n   login(){\n     if(!this.loginChek()){\n      Swal.fire({\n        title: 'Please wait',\n        html: 'System is processing for your request',\n        onBeforeOpen: () => {\n          Swal.showLoading()}});\n     this.dataCheckLogin(this.username,this.password);\n     \n   }\n \n   }\n   username=\"\";\n   password=\"\";\n   loginChek(){\n    if(this.username===''||this.password===''){\n      return false;\n    }\n   }\n    totalQty=0;\n    totalAmount=0;\n   totalCalculator(){\n    this.totalQty=0;\n    this.totalAmount=0;\n    this.appSetting.userOrderTrackingListTemp.forEach(x => {\n      this.totalAmount=this.totalAmount+x.output_price;\n      this.totalQty=this.totalQty+x.outputQty;\n    });\n  }\n   orderTrackingDetialPage(id){\n    this.invoice=0;\n    this.appSetting.userOrderTrackingListTemp=[];\n    this.appSetting.userOrderTrackingList.forEach(x=>{\n      if(x.orderID===id){\n        this.appSetting.userOrderTrackingListTemp.push(x);\n      }\n    });\n    this.totalCalculator();\n    this.orderTracking=1;\n    this.invoice=+id;\n   }\n\n   logout(){\n     this.appSetting.sessionUser={\n      userID: 0,\n      userName: \"\",\n      password: \"\",\n      userType: 0,\n      userPhone: \"\",\n      \n      userAddress: \"\"\n    };\n    this.appSetting.signIn=1;\n    this.username=\"\";\n    this.password=\"\";\n  }\n\n   orderTracking=0;\n   invoice=0;\n   localhost=this.appSetting.apiPort;\n  }\n\n\n"],"sourceRoot":"webpack:///"}