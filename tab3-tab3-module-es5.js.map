{"version":3,"sources":["src/app/tab3/tab3.page.html","src/app/Services/userAuth/user-auth.service.ts","src/app/tab3/tab3.module.ts","src/app/tab3/tab3.page.scss","src/app/tab3/tab3.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>   \\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"center\\\">\\n            <ion-chip (click)=\\\"this.appSetting.back()\\\" outline color=\\\"primary\\\">\\n              <ion-icon  name=\\\"backspace\\\"></ion-icon>\\n              <ion-label>Back</ion-label>\\n            </ion-chip>\\n          </div>\\n        </ion-col>\\n        \\n        <ion-col className=\\\"ion-align-self-center\\\">\\n          <div class=\\\"center\\\">\\n           \\n          </div>\\n        </ion-col>\\n        <ion-col className=\\\"ion-align-self-center\\\">\\n          <div class=\\\"center\\\">\\n           \\n         </div>\\n        </ion-col>\\n        <ion-col >\\n          <div   class=\\\"center\\\">\\n            <ion-chip *ngIf=\\\"this.appSetting.sessionUser.userID!==0\\\"  (click)=\\\"logout()\\\" outline color=\\\"primary\\\">\\n              <ion-icon name=\\\"log-out-outline\\\"></ion-icon>\\n              <ion-label>Logout</ion-label>\\n            </ion-chip>\\n          </div>\\n         \\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.orderTracking===0\\\" [fullscreen]=\\\"true\\\">\\n\\n\\n        <!---For Sign In -->\\n        <ion-card *ngIf=\\\"this.appSetting.signIn===1\\\" >\\n           <ion-card-header>\\n            <ion-card-title>Sign In</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Phone/Username <ion-text *ngIf=\\\"this.username===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input [(ngModel)]=\\\"this.username\\\" required type=\\\"text\\\" oninput=\\\"\\\"></ion-input>\\n              </ion-item>\\n    \\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Password <ion-text *ngIf=\\\"this.password===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input [(ngModel)]=\\\"this.password\\\" required type=\\\"password\\\" oninput=\\\"\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button  color=\\\"light\\\" expand=\\\"block\\\">\\n                  Cancel\\n                </ion-button>\\n                </ion-col>\\n              \\n              <ion-col>\\n                <ion-button  (click)=\\\"this.login()\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                  Sign In\\n              </ion-button>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col>\\n                <div class=\\\"center\\\">\\n                  <a (click)=\\\"this.appSetting.signIn=0;this.appSetting.signUp=1;\\\">Don't have an account?</a></div>\\n              \\n            </ion-col>\\n          <!-----  <ion-col>\\n             <div class=\\\"center\\\"><a>Forget password?</a></div>\\n            </ion-col>------>\\n          </ion-row>\\n        </ion-grid>\\n      \\n        </ion-card>\\n\\n        <!---For Two Factor Authenication -->\\n    <!-----    \\n      <ion-card *ngIf=\\\"this.appSetting.otp===1\\\">\\n          <ion-card-header>\\n           <ion-card-title>One Time Password</ion-card-title>\\n           <ion-card-subtitle>Please prove us with OTP that you are not spam!</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n         \\n\\n            <ion-item>\\n              <ion-label>Phone</ion-label>\\n              <ion-toggle ></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Google Authenicator</ion-label>\\n              <ion-toggle disabled></ion-toggle>\\n            </ion-item>\\n\\n            <ion-item>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-input required type=\\\"number\\\" placeholder=\\\"OTP\\\"oninput=\\\"\\\"></ion-input>\\n                </ion-col>\\n                <ion-col>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-item>\\n           \\n           \\n           </ion-list>\\n\\n         </ion-card-content>\\n\\n         <ion-grid>\\n           <ion-row>\\n             <ion-col>\\n               <ion-button (click)=\\\"this.appSetting.otp=0\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                 Cancel\\n               </ion-button>\\n               </ion-col>\\n             \\n             <ion-col>\\n               <ion-button (click)=\\\"this.appSetting.loginStatus=1;this.appSetting.otp=0\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                 Submit\\n             </ion-button>\\n             </ion-col>\\n           </ion-row>\\n       </ion-grid>\\n     \\n       </ion-card>        \\n------->\\n    \\n        <!---For Sign Up Authenication -->\\n        <ion-card *ngIf=\\\" this.appSetting.signUp===1\\\">\\n         \\n          <ion-card-header>\\n           <ion-card-title>Sign Up</ion-card-title>\\n           <ion-card-subtitle>Please enter your informations</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Name <ion-text *ngIf=\\\"data.userName.toString()===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"data.userName\\\" ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Password <ion-text  *ngIf=\\\"data.password.toString()!==this.confirmPassword || data.password.toString()===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" ></ion-input>\\n            </ion-item>\\n  \\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Confirm Password <ion-text *ngIf=\\\"data.password.toString()!==this.confirmPassword || this.confirmPassword===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"this.confirmPassword\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Phone Number <ion-text *ngIf=\\\"handlePhoneValue()\\\"  color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"tel\\\" [(ngModel)]=\\\"data.userPhone\\\" ></ion-input>\\n            </ion-item>\\n\\n           \\n           \\n\\n          \\n           \\n           </ion-list>\\n\\n         </ion-card-content>\\n\\n         <ion-grid>\\n           <ion-row>\\n             <ion-col>\\n               <ion-button  color=\\\"light\\\" expand=\\\"block\\\">\\n                 Cancel\\n               </ion-button>\\n               </ion-col>\\n             \\n             <ion-col>\\n               <ion-button (click)=\\\"onPost()\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n                 Sign Up\\n             </ion-button>\\n             </ion-col>\\n           </ion-row>\\n           <ion-row>\\n            <ion-col>\\n              <div class=\\\"center\\\">\\n                <a (click)=\\\"this.appSetting.signIn=1;this.appSetting.signUp=0;\\\">Already a member?</a></div>\\n            \\n          </ion-col>\\n       \\n        </ion-row>\\n          </ion-grid>\\n     \\n       </ion-card>   \\n\\n        <!---For Profile -->\\n        <ion-card *ngIf=\\\" this.appSetting.sessionUser.userID!==0\\\">\\n         \\n          <ion-card-header>\\n           <ion-card-title>User Profile</ion-card-title>\\n           <ion-card-subtitle>This is your delivery information</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\n              <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"this.appSetting.sessionUser.userName\\\" readonly></ion-input>\\n            </ion-item>\\n<!----------\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Password <ion-text  *ngIf=\\\"data.password.toString()!==this.confirmPassword || data.password.toString()===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" ></ion-input>\\n            </ion-item>\\n  \\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Confirm Password <ion-text *ngIf=\\\"data.password.toString()!==this.confirmPassword || this.confirmPassword===''\\\" color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"this.confirmPassword\\\"></ion-input>\\n            </ion-item>\\n--------->\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Phone Number </ion-label>\\n              <ion-input required type=\\\"tel\\\" [(ngModel)]=\\\"this.appSetting.sessionUser.userPhone\\\" readonly></ion-input>\\n            </ion-item>\\n\\n        \\n           \\n           </ion-list>\\n\\n         </ion-card-content>\\n\\n         <ion-grid>\\n           <ion-row>\\n            <ion-col>\\n              <div class=\\\"center\\\">\\n            <!-----    <a (click)=\\\"this.appSetting.signIn=1;this.appSetting.signUp=0;\\\">Want to Edit User Profile?</a>\\n             ------> \\n            </div>\\n           \\n          </ion-col>\\n       \\n        </ion-row>\\n       </ion-grid>\\n     \\n       </ion-card>  \\n      \\n\\n        <!---For order Tracking -->\\n        <ion-card *ngIf=\\\" this.appSetting.sessionUser.userID!==0 && this.appSetting.sessionUser.userType!==2 \\\">\\n          <ion-card-header>\\n           <ion-card-title>Order Tracking</ion-card-title>\\n           <ion-card-subtitle *ngIf=\\\"this.appSetting.userOrderTrackingList.length!==0\\\">You can check your order list here</ion-card-subtitle>\\n           <ion-card-subtitle *ngIf=\\\"this.appSetting.userOrderTrackingList.length===0\\\">You have no order</ion-card-subtitle>\\n         </ion-card-header>\\n         <ion-card-content>\\n           <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n              <ion-item button *ngFor=\\\"let item of this.appSetting.userOrderTrackingList\\\" (click)=\\\"orderTrackingDetialPage(item.orderID)\\\">\\n                <ion-label>\\n                  Invoice :{{item.orderID}}\\n                </ion-label>\\n              </ion-item>  \\n              <ion-item button (click)=\\\"this.orderListRefresh()\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"refresh-circle-outline\\\"></ion-icon>\\n                \\n                <ion-label>\\n                  Refresh\\n                </ion-label>\\n              </ion-item>  \\n           </ion-list>\\n          </ion-card-content>\\n        </ion-card> \\n        <!----location share-->\\n        <ion-card>  \\n          <ion-grid *ngIf=\\\" this.appSetting.sessionUser.userID!==0 && this.appSetting.sessionUser.userType!==2\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-button   (click)=\\\"locationShare()\\\"  color=\\\"primary\\\" expand=\\\"block\\\">\\n                     Location Share\\n                  </ion-button>      \\n                </ion-col>\\n              </ion-row>\\n          </ion-grid>\\n        </ion-card>  \\n\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.appSetting.userOrderTrackingListTemp.length!==0  && this.orderTracking===1\\\"\\n [fullscreen]=\\\"true\\\">\\n  <ion-row>\\n    <ion-col>\\n      <ion-button expand=\\\"full\\\">Invoice No:{{this.invoice}}</ion-button>\\n    </ion-col>\\n    \\n  </ion-row>\\n  <ion-card *ngFor=\\\"let item of this.appSetting.userOrderTrackingListTemp; let i=index;\\\">\\n    <img src=\\\"{{this.appSetting.http}}://{{this.localhost}}/images/Sub-{{item.sub_item_id}}-{{item.sub_item_image}}\\\" />\\n   \\n    <ion-card-header>\\n      <ion-card-subtitle>{{item.main_item_name}}</ion-card-subtitle>\\n      <ion-card-title>{{item.sub_item_name}}</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-toolbar>\\n      <ion-grid>\\n        \\n        <ion-row>\\n          <ion-col>\\n            <ion-card >\\n              <ion-card-header>\\n                <ion-card-subtitle>Quantity</ion-card-subtitle>\\n                <ion-card-title>{{item.outputQty}}</ion-card-title>\\n              </ion-card-header>\\n            </ion-card>\\n          </ion-col>\\n     \\n          <ion-col>\\n            <ion-card>\\n              <ion-card-header>\\n                <ion-card-subtitle>Amount</ion-card-subtitle>\\n                <ion-card-title>{{item.output_price}}</ion-card-title>\\n              </ion-card-header>\\n            </ion-card>\\n          </ion-col>\\n         \\n        </ion-row>\\n      </ion-grid>\\n\\n    </ion-toolbar>\\n  \\n  </ion-card>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-subtitle>Total Quantity</ion-card-subtitle>\\n            <ion-card-title>{{this.totalQty}}</ion-card-title>\\n          </ion-card-header>\\n        </ion-card>\\n      </ion-col>\\n\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-subtitle>Total Amount</ion-card-subtitle>\\n            <ion-card-title>{{this.totalAmount}}</ion-card-title>\\n          </ion-card-header>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"this.orderTracking=0\\\">Back</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-content *ngIf=\\\"this.appSetting.sessionUser.userType===2\\\">\\n  <ion-card>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of this.appSetting.errorMsg\\\">\\n    <ion-textarea>\\n        {{item}}\\n    </ion-textarea>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n </ion-content> \\n\\n\\n\\n\"","import { userModel } from './../../model/userModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAuthService {\r\n  private url = `${this.appSetting.http}://${this.appSetting.apiPort}/api/userAuthenication`;\r\n  constructor(private http: HttpClient,private appSetting:appSetting) {}\r\n\r\n\r\n  check(username:String,password:String): Observable<userModel>{\r\n    let url=this.url+`?username=${username}&password=${password}`;\r\n    return this.http.get<userModel>(url);\r\n  }\r\n}\r\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }])\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMy9EOlxcb25saW5lU2hvcEFwcFxcb25saW5lU2hvcEFwcFxcbXlBcHAvc3JjXFxhcHBcXHRhYjNcXHRhYjMucGFnZS5zY3NzIiwic3JjL2FwcC90YWIzL3RhYjMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvdGFiMy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XG59IiwiaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufSJdfQ== */\"","import { LocationSaveService } from './../Services/locationSave/location-save.service';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserOrderTrackingService } from './../Services/userOrderTracking/user-order-tracking.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserAuthService } from './../Services/userAuth/user-auth.service';\nimport  Swal  from 'sweetalert2';\nimport { userModel } from './../model/userModel';\nimport { UserService } from './../Services/User/user.service';\nimport { appSetting } from 'src/app/app-setting';\nimport { Component } from '@angular/core';\nimport { locationModel } from '../model/locationModel';\n\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n  data:userModel={\n    userID: 0,\n        password:\"\",\n        userName: \"\",\n        userType: 0,\n        userPhone: \"\",\n        userAddress: \"\"\n  }\n  confirmPassword=\"\";\n  phoneStatus=false;\n  emailStatus=true;\n  typeError=false;\n  constructor( private locationService:LocationSaveService,\n    private geolocation: Geolocation,\n   private service:UserService,private orderTrackingService:UserOrderTrackingService,public appSetting:appSetting,private userAuthService:UserAuthService) {}\n  handlePhoneValue(){\n   \n    if(this.data.userPhone===''){\n      this.phoneStatus= false;\n      return true;\n    }\n    else if(this.data.userPhone.length<8){\n      this.phoneStatus= false;\n      return true;\n    }\n    else\n    {\n      this.phoneStatus= true;\n      return false;\n    }\n  }\n  \n  validation(){\n    if(this.data.password!==this.confirmPassword || this.confirmPassword==='')\n    this.typeError=true;\n    else if(this.phoneStatus===false)\n    this.typeError=true;\n    else if(this.emailStatus===false)\n    this.typeError=true;\n    else if(this.data.userName==='')\n    this.typeError=true;\n    else\n    this.typeError=false;\n  }\n  \n  userProfile:userModel=this.appSetting.sessionUser;\n  onPost(){\n    this.validation();\n    if(this.typeError===false){\n      let x:userModel=this.data;\n      this.service.post(x);\n     \n     \n    }\n    }\n\n\n    dataCheckLogin(username:String,password:String){\n      this.userAuthService.check(username,password).subscribe(\n       x=>{\n        \n         this.appSetting.sessionUser=x},\n       err=>{\n         let error:HttpErrorResponse=Object.assign(err);\n         let msg=\"error\";\n         let action=\"\";\n         let btn=\"OK\";\n         if(error.status===401){\n           msg=\"Invalid username & password!\";\n           action=\"<a href>Forget password?</a>\";\n         }\n         if(error.status===404){\n           msg=\"Account does not exist\";\n           action=\"<span>Please Sign Up to continue.Thank you</span>\"\n         }\n    \n          Swal.hideLoading();\n         Swal.fire({\n           icon: 'error',\n           title: 'Oops...',\n           text: msg,\n           confirmButtonText:btn,\n           footer: action\n         });\n       },\n       ()=>{\n       \n         this.userProfile=this.appSetting.sessionUser;\n         if(this.appSetting.sessionUser.userType===2){\n          this.orderTrackingService.getAll().subscribe(x=>\n            this.appSetting.userOrderTrackingList=x,err=>(console.log(err)),()=>{\n              this.appSetting.signIn=0;\n              this.geolocation.getCurrentPosition().then((resp) => {\n                let locationModel:locationModel={\n                  id:0,\n                  userID:this.appSetting.sessionUser.userID,\n                  location_ltd:resp.coords.latitude.toString(),\n                  location_lng:resp.coords.longitude.toString()\n                }\n                this.locationService.post(locationModel);\n                 Swal.fire('Welcome',\"Login Successful\",'success');\n               Swal.hideLoading();\n              }\n              )\n            });\n         }else{\n         this.orderTrackingService.get(this.appSetting.sessionUser.userID).subscribe(x=>\n          this.appSetting.userOrderTrackingList=x,err=>(console.log(err)),()=>{\n            this.appSetting.signIn=0;\n            this.geolocation.getCurrentPosition().then((resp) => {\n              let locationModel:locationModel={\n                id:0,\n                userID:this.appSetting.sessionUser.userID,\n                location_ltd:resp.coords.latitude.toString(),\n                location_lng:resp.coords.longitude.toString()\n              }\n              this.locationService.post(locationModel);\n               Swal.fire('Welcome',\"Login Successful\",'success');\n             Swal.hideLoading();\n            }\n            )\n          });}\n       }\n     )\n   }\nlocationShare(){\n  this.geolocation.getCurrentPosition().then((resp) => {\n    let locationModel:locationModel={\n      id:0,\n      userID:this.appSetting.sessionUser.userID,\n      location_ltd:resp.coords.latitude.toString(),\n      location_lng:resp.coords.longitude.toString()\n    }\n    this.locationService.post(locationModel);\n    Swal.fire(\"Successfully Share your location\");\n});}\n   orderListRefresh(){\n    Swal.fire({\n      title: 'Please wait',\n      html: 'System is processing for your request',\n      onBeforeOpen: () => {\n        Swal.showLoading()}});\n    this.orderTrackingService.get(this.appSetting.sessionUser.userID).subscribe(\n      x=>this.appSetting.userOrderTrackingList=x,\n      err=>console.log(err),()=>{\n        Swal.hideLoading();\n    })\n   }\n   login(){\n     if(!this.loginChek()){\n      Swal.fire({\n        title: 'Please wait',\n        html: 'System is processing for your request',\n        onBeforeOpen: () => {\n          Swal.showLoading()}});\n     this.dataCheckLogin(this.username,this.password);\n     \n   }\n \n   }\n   username=\"\";\n   password=\"\";\n   loginChek(){\n    if(this.username===''||this.password===''){\n      return false;\n    }\n   }\n    totalQty=0;\n    totalAmount=0;\n   totalCalculator(){\n    this.totalQty=0;\n    this.totalAmount=0;\n    this.appSetting.userOrderTrackingListTemp.forEach(x => {\n      this.totalAmount=this.totalAmount+x.output_price;\n      this.totalQty=this.totalQty+x.outputQty;\n    });\n  }\n   orderTrackingDetialPage(id){\n    this.invoice=0;\n    this.appSetting.userOrderTrackingListTemp=[];\n    this.appSetting.userOrderTrackingList.forEach(x=>{\n      if(x.orderID===id){\n        this.appSetting.userOrderTrackingListTemp.push(x);\n      }\n    });\n    this.totalCalculator();\n    this.orderTracking=1;\n    this.invoice=+id;\n   }\n\n   logout(){\n     this.appSetting.sessionUser={\n      userID: 0,\n      userName: \"\",\n      password: \"\",\n      userType: 0,\n      userPhone: \"\",\n      \n      userAddress: \"\"\n    };\n    this.appSetting.signIn=1;\n    this.username=\"\";\n    this.password=\"\";\n  }\n\n   orderTracking=0;\n   invoice=0;\n   localhost=this.appSetting.apiPort;\n  }\n\n\n"],"sourceRoot":"webpack:///","file":"tab3-tab3-module-es5.js"}